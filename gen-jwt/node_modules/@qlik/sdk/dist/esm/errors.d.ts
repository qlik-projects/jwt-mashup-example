export declare class GenericError extends Error {
    constructor(error: string | any);
}
/**
 * @remarks
 * AuthenticationError is an error that occured during a request
 */
export declare class AuthenticationError extends GenericError {
}
export declare enum AuthenticationErrorMsg {
    FAILED_AUTH_API_KEY = "Failed to authenticate host using api-key",
    UNAUTHENTICATED = "Unauthenticated access"
}
/**
 * @remarks
 * ConnectionError is an error that occured during creating a request
 */
export declare class ConnectionError extends GenericError {
}
export declare enum ConnectionErrorMsg {
    NO_RESPONSE = "Connection Error"
}
/**
 * @remarks
 * CustomError is an error that occured during setup
 */
export declare class CustomError extends GenericError {
}
export declare enum CustomErrorMsg {
    EMPTY_HOST = "Empty host in config",
    MISSING_REQUIRED_PROPERTY = "Missing required property",
    UNSUPPORTED_AUTH_TYPE = "Unsupported authType",
    UNSUPPORTED_PROPERTY = "Unsupported property",
    NOT_IMPLEMENTED = "Not implemented"
}
/**
 * @remarks
 * AuthorizationError is an error that occured during OAuth authorization
 */
export declare class AuthorizationError extends GenericError {
}
export declare enum AuthorizationErrorMsg {
    FAILED_AUTH_OAUTH = "Failed to authorize using OAuth"
}
