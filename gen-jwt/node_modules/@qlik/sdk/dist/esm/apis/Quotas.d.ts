/**
This is spectacularly generated code by spectacular v0.13.0 based on
Qlik Cloud Services 0.554.4
*/
import Auth from '../auth/auth.js';
import type { Config } from '../types/types.js';
/**
  @param data - Quota item.
  @param auth - Auth object used to make requests
 */
export declare class GetQuotaByIdResult {
    auth?: Auth;
    data: Array<Quota>;
    [key: string]: any;
    constructor({ data, ...rest }: {
        data: Array<Quota>;
    }, auth?: Auth);
}
/**
  @param data - Array of quota items.
  @param auth - Auth object used to make requests
 */
export declare class GetQuotasResult {
    auth?: Auth;
    data: Array<Quota>;
    [key: string]: any;
    constructor({ data, ...rest }: {
        data: Array<Quota>;
    }, auth?: Auth);
}
/**
  @param attributes - The attributes of the quota.
  @param id - The unique identifier of the quota item. For example, "app_mem_size", "app_upload_disk_size", or "shared_spaces".
  @param type - The resource type of the quota item. Always equal to "quotas".
  @param auth - Auth object used to make requests
 */
export declare class Quota {
    auth?: Auth;
    attributes: QuotaAttributes;
    id: string;
    type: string;
    [key: string]: any;
    constructor({ attributes, id, type, ...rest }: {
        attributes: QuotaAttributes;
        id: string;
        type: string;
    }, auth?: Auth);
}
/**
  The attributes of the quota.
  @param quota - The quota limit. If there is no quota limit, -1 is returned.
  @param unit - The unit of the quota limit. For memory quotas, the unit is always "bytes". For other discrete units, the item counted is used as unit, for example "spaces".
  @param usage - The current quota usage, if applicable. This attribute is only present if it is requested using the reportUsage query parameter.
  @param warningThresholds - The warning thresholds at which "close to quota" warnings can be issued when exceeded. If omitted, no warning threshold shall be used. Currently, the array will contain only one threshold value. In the future, this may be extended. The threshold is a number between 0 and 1, relating to the quota limit. For example, a value of 0.9 means that a warning should be issued when exceeding 90% of the quota limit.
  @param auth - Auth object used to make requests
 */
export declare class QuotaAttributes {
    auth?: Auth;
    quota: number;
    unit: string;
    usage?: number;
    warningThresholds?: Array<number>;
    [key: string]: any;
    constructor({ quota, unit, usage, warningThresholds, ...rest }: {
        quota: number;
        unit: string;
        usage?: number;
        warningThresholds?: Array<number>;
    }, auth?: Auth);
}
export declare class Quotas {
    auth: Auth;
    config: Config;
    constructor(config: Config | Auth);
    /**
    Returns a specific quota item for the tenant (provided in JWT).
  
      @param id - The unique identifier of the quota item. For example, "app_mem_size", "app_upload_disk_size", or "shared_spaces".
      @param reportUsage - The Boolean flag indicating whether quota usage shall be part of the response. The default value is false (usage not included).
    */
    gets(id: string, queryParams?: {
        reportUsage?: boolean;
    }): Promise<GetQuotaByIdResult>;
    /**
    Returns all quota items for the tenant (provided in JWT).
  
      @param reportUsage - The Boolean flag indicating whether quota usage shall be part of the response. The default value is false (only limits returned).
    */
    getQuotas(queryParams?: {
        reportUsage?: boolean;
    }): Promise<GetQuotasResult>;
}
