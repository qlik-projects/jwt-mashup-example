import { Config, Interceptors } from '../types/types.js';
type RestClientInstanceWithoutInterceptors = (url: RequestInfo, init?: RequestInit | unknown) => Promise<Response>;
export interface RestClientInstance extends RestClientInstanceWithoutInterceptors {
    interceptors?: Interceptors;
    fetch?: (input: RequestInfo | URL, init?: RequestInit) => Promise<Response>;
}
/**
 * @remarks
 * RestClient is used to make http requests
 *
 * @param config - required configuration
 *
 * @returns an instance of the RestClient class.
 */
export default class RestClient {
    interceptors: Interceptors;
    readonly restClientInstance: RestClientInstance;
    constructor(config: Config);
}
export {};
